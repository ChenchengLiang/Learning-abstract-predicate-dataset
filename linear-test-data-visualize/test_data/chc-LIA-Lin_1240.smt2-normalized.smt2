(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun main_1_1 (Int Int) Bool)
(declare-fun main_1_1_1_1 (Int Int) Bool)
(declare-fun main_1_1_2_1 (Int Int) Bool)
(declare-fun main_1_1_3_1 (Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (= var1 0) (= var0 0))) (main_1_1 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (main_1_1_1_1 var3 var2) (and (and (and (= var2 (- 1)) (= var3 (- 2))) (= var1 0)) (= var0 0)))) (main_1_1 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (main_1_1 var3 var2) (and (= var2 var1) (= var3 var0)))) (main_1_1_1_1 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (main_1_1_2_1 var3 var2) (and (and (and (= (+ var2 (* (- 1) var1)) (- 1)) (= var3 (- 2))) (= var0 0)) (not (= var1 0))))) (main_1_1 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (main_1_1 var3 var2) (and (= var2 var1) (= var3 var0)))) (main_1_1_2_1 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (main_1_1_3_1 var3 var2) (and (and (and (= (+ var2 (* (- 1) var1)) (- 1)) (= (+ var3 (* (- 2) var1)) (- 2))) (= var0 (* 2 var1))) (not (= var1 0))))) (main_1_1 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (main_1_1 var3 var2) (and (= var2 var1) (= var3 var0)))) (main_1_1_3_1 var0 var1))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (main_1_1 var1 var0) (and (not (= var1 (* 2 var0))) (not (= var1 (- 2))))))))
(check-sat)
